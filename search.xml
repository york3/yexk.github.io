<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[对比Laravel5.4 和ThinkPHP5 的区别]]></title>
      <url>/2017/08/15/%E5%AF%B9%E6%AF%94Laravel5-4-%E5%92%8CThinkPHP5-%E7%9A%84%E5%8C%BA%E5%88%AB/</url>
      <content type="html"><![CDATA[<h1 id="对比Laravel5-4-和ThinkPHP5-的区别"><a href="#对比Laravel5-4-和ThinkPHP5-的区别" class="headerlink" title="对比Laravel5.4 和ThinkPHP5 的区别"></a>对比Laravel5.4 和ThinkPHP5 的区别</h1><h2 id="两者相同部分"><a href="#两者相同部分" class="headerlink" title="两者相同部分"></a>两者相同部分</h2><ol>
<li>使用的<code>public/index.php</code>作为项目入口。</li>
<li>使用了<code>MVC设计思想</code>。</li>
<li>url都使用了<code>PATHINFO模式</code>。</li>
<li><code>命令行模式</code>。</li>
<li>支持分布式数据库设计。</li>
<li>支持路由模式</li>
<li>支持表单验证机制。</li>
<li>支持缓存</li>
<li>支持错误和日志记录</li>
<li>支持<code>Mysql</code>、<code>SqlServer</code>、<code>PgSQL</code>、<code>Sqlite</code>数据库</li>
<li>资源控制器(RESTful)</li>
<li>数据库迁移（migration）</li>
<li>支持模型关联，链式操作</li>
<li>监听SQL</li>
<li>支持多语言</li>
<li>支持redis<br>xx. …(目前只发现了这么多，后续有在再补充)</li>
</ol>
<a id="more"></a>
<p><strong>流程图</strong><br><img src="/2017/08/15/对比Laravel5-4-和ThinkPHP5-的区别/laravel5.4.png" alt="laravel" title="laravel"><br><img src="/2017/08/15/对比Laravel5-4-和ThinkPHP5-的区别/tp5.png" alt="tp5" title="tp5"></p>
<blockquote>
<p>两者在使用和搭建上大致相同，通过相同的入口文件。类似的配置文件。和差不多的操作。</p>
</blockquote>
<h2 id="不同点"><a href="#不同点" class="headerlink" title="不同点"></a>不同点</h2><h3 id="Laravel5-4"><a href="#Laravel5-4" class="headerlink" title="Laravel5.4"></a>Laravel5.4</h3><ul>
<li>服务容器<blockquote>
<p>Laravel 务容器是管理类依赖和运行依赖注入的有力工具。依赖注入是一个花俏的名词，它实质上是指：类的依赖通过构造器或在某些情况下通过「setter」方法进行「注入」。</p>
</blockquote>
</li>
<li>服务提供者<blockquote>
</blockquote>
</li>
<li>Facades</li>
<li>Contracts<blockquote>
</blockquote>
</li>
<li>中间件<blockquote>
<p>Laravel 中间件提供了一种方便的机制来过滤进入应用的 HTTP 请求。</p>
</blockquote>
</li>
<li>CSRF 保护</li>
<li>Blade 模板</li>
<li>Laravel Mix</li>
<li>广播系统</li>
<li>集合</li>
<li>事件系统</li>
<li>消息通知</li>
<li>队列</li>
<li>任务调度</li>
</ul>
<h3 id="ThinkPHP5"><a href="#ThinkPHP5" class="headerlink" title="ThinkPHP5"></a>ThinkPHP5</h3><ul>
<li>前置操作</li>
<li>行为（Behavior）</li>
<li>分页实现</li>
</ul>
<blockquote>
<p>详细的对比内容后续补充。</p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> PHP </category>
            
        </categories>
        
        
        <tags>
            
            <tag> laravel </tag>
            
            <tag> thinkphp </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[css基本入门]]></title>
      <url>/2017/08/15/css%E5%9F%BA%E6%9C%AC%E5%85%A5%E9%97%A8/</url>
      <content type="html"><![CDATA[<h1 id="CSS基本入门"><a href="#CSS基本入门" class="headerlink" title="CSS基本入门"></a>CSS基本入门</h1><p><strong>基本语法：</strong> <code>选择器{属性名:值;}</code></p>
<h2 id="选择器"><a href="#选择器" class="headerlink" title="选择器"></a>选择器</h2><p>常用的选择器：</p>
<ol>
<li>元素选择<code>p{color:red}</code></li>
<li>ID选择器<code>#ID{color:red}</code></li>
<li>CLASS类选择器<code>.class{color:red}</code></li>
<li>后代选择器<code>div p{color:red}</code></li>
</ol>
<h2 id="常用的样式"><a href="#常用的样式" class="headerlink" title="常用的样式"></a>常用的样式</h2><h4 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h4><ol>
<li>背景颜色(background-color)</li>
<li>背景颜色(background-image)</li>
<li><p>背景颜色(background-position)</p>
<blockquote>
<p>简写形式 <code>body {background:#ffffff url(&#39;img_tree.png&#39;) no-repeat right top;}</code></p>
</blockquote>
</li>
</ol>
<h4 id="文字"><a href="#文字" class="headerlink" title="文字"></a>文字</h4><ol>
<li>文本颜色(color)</li>
<li>对齐方式(text-align)</li>
<li>文本修饰(text-decoration)</li>
<li>字体大小(font-size)</li>
<li>文本修饰(font-family)</li>
</ol>
<h4 id="内外边距"><a href="#内外边距" class="headerlink" title="内外边距"></a>内外边距</h4><ol>
<li>内边距(padding)</li>
<li>外边距(margin)</li>
</ol>
<h4 id="边框"><a href="#边框" class="headerlink" title="边框"></a>边框</h4><p>1、边框</p>
<h4 id="定位"><a href="#定位" class="headerlink" title="定位"></a>定位</h4><ol>
<li>静态定位（static）</li>
<li>相对定位（relative）</li>
<li>绝对定位（absolute）</li>
<li>固定定位（fixed）</li>
</ol>
<h4 id="浮动"><a href="#浮动" class="headerlink" title="浮动"></a>浮动</h4><ol>
<li>左浮动</li>
<li>右浮动</li>
<li>清除浮动</li>
</ol>
<h4 id="伪类元素"><a href="#伪类元素" class="headerlink" title="伪类元素"></a>伪类元素</h4><h2 id="引用方式"><a href="#引用方式" class="headerlink" title="引用方式"></a>引用方式</h2><p>样式的引用方式:</p>
<ul>
<li>外部样式表（<code>&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;style.css&quot;&gt;</code>）</li>
<li>内部样式表（<code>&lt;style&gt;p{color:red}&lt;/style&gt;</code>）</li>
<li>(X)导入样式（<code>&lt;style type=&quot;text/css&quot;&gt; @import &quot;style.css&quot;&lt;/style&gt;</code>）</li>
<li>内联(行内)样式（<code>&lt;p style=&quot;color:sienna;margin-left:20px&quot;&gt;This is a paragraph.&lt;/p&gt;</code>）</li>
</ul>
<blockquote>
<p><strong>样式权重问题：</strong><br>浏览器缺省设置 -&gt; 外部样式表 -&gt; 内部样式表（位于 <head> 标签内部） -&gt; 内联样式（在 HTML 元素内部）。<br>标签选择器 -&gt; 类选择器 -&gt; ID选择器 </head></p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> CSS </category>
            
        </categories>
        
        
        <tags>
            
            <tag> css </tag>
            
            <tag> 快速入门 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[PHP中获取文件扩展名的N种方法]]></title>
      <url>/2017/08/15/PHP%E4%B8%AD%E8%8E%B7%E5%8F%96%E6%96%87%E4%BB%B6%E6%89%A9%E5%B1%95%E5%90%8D%E7%9A%84N%E7%A7%8D%E6%96%B9%E6%B3%95/</url>
      <content type="html"><![CDATA[<h2 id="PHP中获取文件扩展名的N种方法"><a href="#PHP中获取文件扩展名的N种方法" class="headerlink" title="PHP中获取文件扩展名的N种方法"></a>PHP中获取文件扩展名的N种方法</h2><p>从网上收罗的，基本上就以下这几种方式：</p>
<h4 id="第1种方法："><a href="#第1种方法：" class="headerlink" title="第1种方法："></a>第1种方法：</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">get_extension</span><span class="params">($file)</span></span></div><div class="line"><span class="function"></span>&#123;</div><div class="line">	<span class="keyword">return</span> substr(strrchr($file, <span class="string">'.'</span>), <span class="number">1</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="第2种方法："><a href="#第2种方法：" class="headerlink" title="第2种方法："></a>第2种方法：</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">get_extension</span><span class="params">($file)</span></span></div><div class="line"><span class="function"></span>&#123;</div><div class="line">	<span class="keyword">return</span> substr($file, strrpos($file, <span class="string">'.'</span>)+<span class="number">1</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="第3种方法："><a href="#第3种方法：" class="headerlink" title="第3种方法："></a>第3种方法：</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">get_extension</span><span class="params">($file)</span></span></div><div class="line"><span class="function"></span>&#123;</div><div class="line">	$info = explode(<span class="string">'.'</span>, $file);</div><div class="line">	<span class="keyword">return</span> end($info);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="第4种方法："><a href="#第4种方法：" class="headerlink" title="第4种方法："></a>第4种方法：</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">get_extension</span><span class="params">($file)</span></span></div><div class="line"><span class="function"></span>&#123;</div><div class="line">	$info = pathinfo($file);</div><div class="line">	<span class="keyword">return</span> $info[<span class="string">'extension'</span>];</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="第5种方法："><a href="#第5种方法：" class="headerlink" title="第5种方法："></a>第5种方法：</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">get_extension</span><span class="params">($file)</span></span></div><div class="line"><span class="function"></span>&#123;</div><div class="line">	<span class="keyword">return</span> pathinfo($file, PATHINFO_EXTENSION);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<blockquote>
<p>大概看了下上面的几种情况。你会喜欢用几种呢？</p>
</blockquote>
<p>接下来就开始测试一下各种刁钻的问题。</p>
<ul>
<li>路径1. /home/test  </li>
<li>路径2. /init.d/test  </li>
<li>路径3. test.tar.gz  </li>
</ul>
<p>对应这四个情况。发现使用路径1去测试方法4，出现警告：<code>Undefined index: extension</code>。<br>使用路径2去测试方法1,方法2,方法3，都出现了取错后缀的问题。<br>方法5基本能应对上面的路径1和路径2。但还有一个问题。那就是遇到tar.gz这样的后缀的时候还是会有问题。<br>所以路径3的后缀是tar.gz，使用以上几种的方式都不能正确的取得后缀名，这个还是需要自己写一个判断或者限定。</p>
]]></content>
      
        <categories>
            
            <category> PHP </category>
            
        </categories>
        
        
        <tags>
            
            <tag> php </tag>
            
            <tag> function </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[git命令行秘钥创建]]></title>
      <url>/2017/08/15/git%E5%91%BD%E4%BB%A4%E8%A1%8C%E7%A7%98%E9%92%A5%E5%88%9B%E5%BB%BA/</url>
      <content type="html"><![CDATA[<ol>
<li>打开 <code>Git Bash.</code> 命令行。</li>
<li><p>输入命令</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ssh-keygen -t rsa -C &quot;your_email@example.com&quot;</div></pre></td></tr></table></figure>
<blockquote>
<p>将邮箱换成你的邮箱，一直按回车就好了。</p>
</blockquote>
</li>
<li><p>最后会在用户目录下生成 <code>~/.ssh/id_rsa</code> 和 <code>~/.ssh/id_rsa.pub</code> 文件</p>
</li>
<li><p>在GitHub页面上的个人设置里面找到<code>SSH and GPG keys</code><br>然后点击 <code>New SSH key</code><br>把刚刚创建的 <code>id_rsa.pub</code> 文件的内容添加到里面去。保存。</p>
</li>
<li><p>最终大工搞成。</p>
</li>
</ol>
]]></content>
      
        <categories>
            
            <category> github </category>
            
        </categories>
        
        
        <tags>
            
            <tag> github </tag>
            
        </tags>
        
    </entry>
    
  
  
</search>
